{"version":3,"sources":["reducers/index.js","reducers/movieReducer.js","reducers/userReducer.js","actions/index.js","components/Movie/Movie.js","components/MovieContainer/MovieContainer.js","api/apiCalls.js","components/MovieSpecs/MovieSpecs.js","components/Login/Login.js","components/AccountMenu/AccountMenu.js","components/SignUp/SignUp.js","components/SignUpMenu/SignUpMenu.js","components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","movies","state","arguments","length","undefined","action","type","login","user","showError","error","userFavorites","favorites","setFavorites","Movie","_ref","poster","id","imgSrc","backDrop","concat","react_default","a","createElement","react_router_dom","to","key","className","src","alt","MovieContainer","displayMovies","map","movie","components_Movie_Movie","backdrop_path","poster_path","rating","vote_average","title","addUser","Object","asyncToGenerator","regenerator_default","mark","_callee","options","response","wrap","_context","prev","next","method","body","JSON","stringify","headers","Content-Type","fetch","sent","abrupt","ok","t0","console","log","message","Error","stop","_x","apply","this","getUser","_ref2","_callee2","result","_context2","json","_x2","favoriteMovie","_ref3","_callee3","userId","movieInfo","_context3","data","_x3","_x4","fetchFavorites","_ref4","_callee4","_context4","_x5","removeFavorite","_ref5","_callee5","movieId","option","_context5","_x6","_x7","MovieSpecs","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFavorite","_this$props","overview","release_date","isFavorited","movie_id","user_id","then","setState","handleDelete","_this$props2","_this2","_this$props3","onClick","Component","connect","store","dispatch","Login","email","password","handleChange","handleSubmit","onSubmit","value","name","placeholder","onChange","AccountMenu","e","_e$target","target","defineProperty","preventDefault","display","view","react_router","Login_Login_Login","SignUp","handleAddChange","handleAdd","SignUpMenu","SignUp_SignUp_SignUp","NavBar","exact","path","render","components_MovieContainer_MovieContainer","components_AccountMenu_AccountMenu","logout","match","params","description","find","parseInt","components_MovieSpecs_MovieSpecs","logoutUser","components_SignUpMenu_SignUpMenu","App","_Component","inherits","createClass","_componentDidMount","process","res","results","catch","showMovies","components_NavBar_NavBar","Boolean","window","location","hostname","createStore","composeWithDevTools","router","es","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f724f7e4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { movieReducer } from './movieReducer';\nimport { loginUserReducer, showErrorReducer, userFavoritesReducer } from './userReducer';\n\nconst rootReducer = combineReducers({\n  movies: movieReducer,\n  login: loginUserReducer,\n  showError: showErrorReducer,\n  userFavorites: userFavoritesReducer\n});\n\nexport default rootReducer;","export const movieReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'SHOW_MOVIES':\n      return action.movies;\n\n    default:\n      return state;\n  }\n}","export const showErrorReducer = (state = '', action) => {\n  switch (action.type) {\n    case \"SHOW_ERROR\":\n      return action.error\n  \n    default:\n      return state;\n  }\n}\n\nexport const loginUserReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'LOGIN':\n      return action.user;\n    case 'LOGOUT':\n      return {}\n    default:\n      return state;\n  }\n}\n\nexport const userFavoritesReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_FAVORITES':\n      return action.favorites;\n    default:\n      return state;\n  }\n}","export const showMovies = (movies) => ({\n  type: 'SHOW_MOVIES',\n  movies\n});\n\nexport const login = (user) => ({\n  type: 'LOGIN',\n  user\n});\n\nexport const logOut = () => ({\n  type: 'LOGOUT'\n})\n\nexport const showError = (error) => ({\n  type: \"SHOW_ERROR\",\n  error\n});\n\nexport const setFavorites = (favorites) => ({\n  type: 'SET_FAVORITES',\n  favorites\n})\n ","import React from 'react';\nimport '../Movie/Movie.css'\nimport { Link } from 'react-router-dom';\n\nconst Movie = ({ poster, id, backDrop }) => {\n  const imgSrc = `http://image.tmdb.org/t/p/w185//${poster}`\n  return (\n    <Link to={`/${id}`} key={id} className='movie'>\n        <img src={imgSrc} alt=\"movie poster\"/>\n    </Link>\n  )\n}\n\nexport default Movie;","import React from 'react';\nimport Movie from '../Movie/Movie';\nimport '../MovieContainer/MovieContainer.css'\n\nconst MovieContainer = ({ movies }) => {\n  const displayMovies = movies.map(movie => {\n    return (\n      <Movie\n        backDrop={movie.backdrop_path}\n        poster={movie.poster_path}\n        rating={movie.vote_average}\n        id={movie.id}\n        key={movie.id}\n        title={movie.title}\n      />\n    )\n  })\n\n  return (\n    <section className='movie-container'>\n      {displayMovies}\n    </section>\n  )\n}\n\nexport default MovieContainer;","  // const url = 'http://localhost:3000'\n// import { apiKey } from '../apiKey'\nconst apiKey = process.env.REACT_APP_API_KEY\n\n// const apiKey = '26b4ed9978c000b15baddff565ba3d67'\n\nexport const fetchMovies = () => {\n  return fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}`)\n    .then(res => res.json())\n    .then(res => res.results)\n    .catch (error => error.message)   \n}\n\nexport const addUser = async (user) => {\n  try {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const response = await fetch('https://movietracker-be.herokuapp.com/api/v1/users', options)\n  \n    return response.ok;\n  } catch (error) {\n    console.log(error.message);\n    throw new Error(\"Failed to post error\");\n  }\n}\n\nexport const getUser = async (user) => {\n  try {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n   \n    const response = await fetch('https://movietracker-be.herokuapp.com/api/v1/login', options)\n    const result = await response.json()\n    \n    return result\n  } catch (error) {\n    throw new Error(\"Email and password do not match\");\n  } \n}\n\nexport const favoriteMovie = async (userId, movieInfo) => {\n  try {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(movieInfo),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const response = await fetch(`https://movietracker-be.herokuapp.com/api/v1/users/${userId}/favorites`, options)\n    const result = await response.json()\n    return result.data\n  } catch (error) {\n    throw new Error(\"failed to fetch favorites\");\n  }\n}\n\nexport const fetchFavorites = async (userId) => {\n  try {\n    const response = await fetch(`https://movietracker-be.herokuapp.com/api/users/${userId}/favorites`);\n    const result = await response.json();\n    return result.data\n  } catch (error) {\n    throw new Error('Failed to fetch favorites');\n  }\n}\n\nexport const removeFavorite = async (userId, movieId) => {\n  try {\n    const option = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const response = await fetch(`http://localhost:3001//api/v1/users/${userId}/favorites/${movieId}`, option);\n    const result = await response.json();\n    console.log(result);\n  } catch (error) {\n\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../MovieSpecs/MovieSpecs.css'\nimport { connect } from 'react-redux';\nimport { favoriteMovie, removeFavorite, fetchFavorites } from '../../api/apiCalls';\nimport { setFavorites } from '../../actions'\n\n\nclass MovieSpecs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n      isFavorited: false,\n    }\n  }\n\n\n  handleFavorite = async () => {\n    if (this.state.isFavorited === true) {\n      return\n    }\n    try {\n      const { title, poster_path, overview, vote_average, release_date, user, id} = this.props;\n      await favoriteMovie({ movie_id: id, user_id: user.id, title, poster_path, release_date, vote_average, overview});\n      await fetchFavorites(user.id)\n      .then(result => this.props.setFavorites(result))\n      this.setState({ isFavorited: true })\n    } catch (error) {\n      console.log(error.message)\n    }\n\n  }\n\n  handleDelete = async () => {\n    try {\n      const {user, id} = this.props;\n      await removeFavorite(user.id, id)\n      await fetchFavorites(user.id)\n      .then(result => this.props.setFavorites(result))\n      this.setState({ isFavorited: false });\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n \n  render() {\n    const { title, backdrop_path, overview, vote_average, release_date, user} = this.props;\n    console.log(this.props)\n    const imgSrc = `http://image.tmdb.org/t/p/w1280//${backdrop_path}`\n    return (\n      <div className='container'>\n        <h1 className='title'>{title}\n          <span className='rating'> Rating : {vote_average} / 10 </span>\n\n          <button onClick={() => this.handleFavorite()} className='btn'>\n            Add to Favorites\n          </button>\n          <button onClick={() => this.handleDelete()} className='btn'>\n            Delete Favorite\n          </button>\n        </h1>\n        <img src={imgSrc} alt=\"movie backdrop\" className='back-drop'/>\n        <p className='description'>{overview}</p>\n        <p className='date'>Release Date: {release_date}</p>\n        <h3>{this.state.error}</h3>\n        <Link to={`/LoggedIn`}>\n          <button className='back-btn'>\n           ◀ back\n          </button>\n        </Link>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => ({\n  user: store.login,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieSpecs);","import React from 'react';\nimport './Login.css'\n\nexport const Login = ({ email, password, handleChange, handleSubmit}) => {\n  return (\n    <section>\n      <form className='log-in-form'onSubmit={handleSubmit}>\n        <input className='log-in'\n          type=\"text\"\n          value={email}\n          name=\"email\"\n          placeholder='example@example.com'\n          onChange={handleChange}\n          />\n        <input className='log-in'\n          type=\"text\"\n          value={password}\n          name=\"password\"\n          placeholder='Password'\n          onChange={handleChange}\n          />\n        <button className='log-in-btn'>Login</button>\n      </form>\n    </section>\n     )\n  };\n","import React, { Component } from 'react';\nimport { Login } from '../Login/Login';\nimport { login, showError } from '../../actions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router'\nimport { getUser } from '../../api/apiCalls'\nimport { fetchFavorites } from '../../api/apiCalls';\nimport { setFavorites } from '../../actions'\nimport './AccountMenu.css'\n\nclass AccountMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      display: 'start',\n      error: null\n    };\n  }\n  \n  handleChange = (e) => {\n    const {name, value} = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      await getUser(this.state)\n      .then(data => this.props.login(data))\n      this.setState({display: 'loggedIn'})\n      await fetchFavorites(this.props.user.id)\n        .then(result => this.props.setFavorites(result))\n    } catch (error) {\n      this.setState({ error: error.message })\n    }\n  }\n\n  render() {\n    const isLoggedIn = this.state.display === 'loggedIn'\n    let view;\n    \n    if(!isLoggedIn) {\n      view = <Login email={this.state.email} password={this.state.password} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\n    } else {\n      view = <Redirect to='/LoggedIn'/>\n    } \n    return (  \n      <div className='log-in-bar'>\n        {view}\n        {this.state.error && <h2 className='error'>{this.state.error}</h2>}\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (store) => ({\n  login: store.login,\n  user: store.login,\n  error: store.showError\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(login(user)),\n  showError: (error) => dispatch(showError(error)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountMenu)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './SignUp.css'\n\nexport const SignUp = ({name, email, password, handleAddChange, handleAdd}) => {\n\n  return (\n    <section>\n      <form className='sign-in-form' onSubmit={handleAdd}>\n        <input className='sign-up'\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder='Name'\n          onChange={handleAddChange}\n        />\n        <input className='sign-up'\n          type=\"text\"\n          value={email}\n          name=\"email\"\n          placeholder='example@example.com'\n          onChange={handleAddChange}\n        />\n        <input className='sign-up'\n          type=\"text\"\n          value={password}\n          name=\"password\"\n          placeholder='Password'\n          onChange={handleAddChange}\n        />\n      <button className='sign-up-btn'>Sign Up</button>\n    </form>\n  </section>\n  )\n};\n\nconst mapStateToProps = store => ({\n  error: store.error\n});\n\nexport default connect(mapStateToProps)(SignUp);","import React, { Component } from 'react';\nimport { SignUp } from '../SignUp/SignUp'\nimport { login, showError } from '../../actions';\nimport { connect } from 'react-redux';\nimport { getUser, addUser } from '../../api/apiCalls'\nimport { Redirect } from 'react-router'\nimport './SignUpMenu.css'\n\nclass SignUpMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      display: '',\n      error: null\n    };\n  }\n\n  handleAddChange = (e) => {\n    const {name, value} = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleAdd = async (e) => {\n    try {\n      e.preventDefault()\n      const response = await addUser(this.state);\n      console.log(response)\n      if (response === true) {\n        this.props.login(this.state)\n        this.setState({display: 'loggedIn'})\n      } else {\n        this.setState({ error: \"Email has already been used\" });\n      }\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  // addUser = async (user) => {\n  //   try {\n  //     const options = {\n  //       method: 'POST',\n  //       body: JSON.stringify(user),\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       }\n  //     }\n      \n  //     const response = await fetch('http://localhost:3000/api/users/new', options)\n  //     const result = await response.json()\n      \n  //     if (!response.ok) {\n  //       return this.props.showError('This user already exists')\n  //     } else {\n  //       return getUser(this.state)\n  //     }\n\n  //   } catch (error) {\n  //     console.log(error.message);\n  //   }\n  // }\n\n  render() {\n    const isLoggedIn = this.state.display === 'loggedIn'\n    let view;\n\n    if(!isLoggedIn) {\n      view = <SignUp name={this.state.name} email={this.state.email} password={this.state.password} handleAddChange={this.handleAddChange} handleAdd={this.handleAdd}/>\n    } else {\n      view = <Redirect to='/LoggedIn'/>\n    }\n    return (\n      <section className='sign-up-bar' >\n        {view}\n        {this.state.error && <h2 className='error'>{this.state.error}</h2>}\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  showError: store.showError\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(login(user)),\n  showError: (error) => dispatch(showError(error))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpMenu)\n","// import React from 'react';\nimport React, { Component } from 'react';\nimport {Route, NavLink} from 'react-router-dom'\nimport MovieContainter from '../MovieContainer/MovieContainer'\nimport MovieSpecs from '../MovieSpecs/MovieSpecs'\nimport AccountMenu from '../AccountMenu/AccountMenu'\nimport SignUpMenu  from '../SignUpMenu/SignUpMenu'\nimport { logOut } from '../../actions';\nimport { connect } from 'react-redux';\nimport './NavBar.css'\nimport { Link } from 'react-router-dom'\n\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n  return (\n    <div>\n      <div className = 'header'>\n        <h1 className='app-name'> <span className='bang'>!</span>Netflix</h1>\n        <NavLink to='/favorites' className='nav-fav'>\n          <button className='nav-btn'>Favorites</button>\n        </NavLink>\n        <NavLink to='/Login' className='nav-log-in'>\n          <button className='nav-log-in-btn'>Login</button>\n        </NavLink>\n        <NavLink to='/signup' className='nav-sign-up'>\n          <button className='nav-btn'>Sign Up</button>\n        </NavLink>\n      </div>\n      <Route exact path='/' render={() => \n        <section>\n          <MovieContainter movies={this.props.movies}/> \n        </section>\n      }/>\n      <Route exact path='/Login' render={() => \n        <section>\n          <AccountMenu user={this.props.user}/>\n          <MovieContainter movies={this.props.movies}/> \n        </section>\n      }/>\n      <Route exact path='/LoggedIn' render={() =>\n        <section>\n          <div className='logged-in-bar'>\n            <h2 className='user-name'>{this.props.user.name && `Welcome ${this.props.user.name}!`}</h2>\n          <Link to='/' onClick={() => this.props.logout()}>\n            <button className='sign-out-btn'>Sign Out</button>\n          </Link>\n          </div>\n          <MovieContainter movies={this.props.movies}/> \n        </section> \n      }/>\n      <Route exact path='/:id' render={({match}) => {\n        const {id} = match.params;\n        const description = this.props.movies.find(movie => {\n          return movie.id === parseInt(id)\n        });\n        return description && <MovieSpecs {...description} />\n      }}/>\n      <Route exact path='/Favorites' render={() =>\n        <section>\n          <div className='logged-in-bar'>\n            <h2 className='user-name'>{this.props.user.name && `Welcome ${this.props.user.name}!`}</h2>\n          <Link to='/' onClick={() => this.props.logout()}>\n            <button className='sign-out-btn' onClick={this.logoutUser}>Sign Out</button>\n          </Link>\n          </div>\n          <MovieContainter movies={this.props.userFavorites} />\n        </section>\n      }/>\n      <Route exact path='/signup' render={() => \n        <section>\n          <SignUpMenu user={this.props.user}/>\n          <MovieContainter movies={this.props.movies}/> \n        </section>\n      }/>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => ({\n  userFavorites: store.userFavorites\n})\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logOut())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React, { Component } from 'react';\nimport './App.css';\nimport { showMovies } from './actions'\nimport { connect } from 'react-redux';\nimport NavBar from './components/NavBar/NavBar';\nimport { fetchMovies } from './api/apiCalls';\n\nexport class App extends Component {\n  async componentDidMount() { \n    await fetchMovies()\n      .then(movies => this.props.showMovies(movies))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar movies={this.props.movies} user={this.props.login}/>\n      </div>\n    );\n  }\n}\n\n  const mapStateToProps = (state) => ({\n    movies: state.movies,\n    login: state.login\n  })\n\n  const mapDispatchToProps = (dispatch) => ({\n    showMovies: (movies) => dispatch (showMovies(movies))\n  })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst router = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App /> \n    </Provider>\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}